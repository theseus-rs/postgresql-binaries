FROM alpine:3.19.0

ARG POSTGRESQL_VERSION

RUN echo "POSTGRESQL_VERSION=$POSTGRESQL_VERSION"
RUN apk update
RUN apk add --no-cache \
      bash \
      bison \
      clang16 \
      curl \
      dpkg \
      dpkg-dev \
      e2fsprogs-dev \
      flex \
      g++ \
      gcc \
      gettext-dev \
      git \
      icu-dev \
      krb5-dev \
      libc-dev \
      libxml2-dev \
      libxslt-dev \
      linux-headers \
      llvm16-dev \
      lz4 \
      lz4-dev \
      make \
      musl-dev \
      openssl-dev \
      ossp-uuid-dev \
      patchelf \
      perl \
      perl-dev \
      perl-ipc-run \
      perl-utils \
      python3 \
      python3-dev \
      readline-dev \
      util-linux-dev \
      zlib-dev \
      zstd-dev

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

RUN branch=$(echo "$POSTGRESQL_VERSION" | awk -F. '{print "REL_"$1"_"$2}') && \
    echo "branch=$branch" && \
    git config --global http.version HTTP/1.1 && \
    git config --global http.sslVerify false && \
    for i in $(seq 1 5); do \
        git clone --depth 1 --branch $branch -c advice.detachedHead=false https://git.postgresql.org/git/postgresql.git /usr/src/postgresql \
            && break || sleep 3; \
    done

WORKDIR /usr/src/postgresql

ENV CLANG=clang-16
ENV LLVM_CONFIG="/usr/lib/llvm16/bin/llvm-config"

RUN major_version=$(echo "$POSTGRESQL_VERSION" | awk -F. '{print $1}') && \
    ./configure \
      --prefix /opt/postgresql \
      --enable-integer-datetimes \
      --enable-option-checking=fatal \
      --enable-tap-tests \
      --enable-thread-safety \
      --with-gssapi \
      $([ $major_version -ge 14 ] && echo "--with-icu" || echo "--without-icu") \
      --without-ldap \
      --with-libxml \
      --with-libxslt \
      $([ $major_version -ge 16 ] && echo "--with-llvm") \
      $([ $major_version -ge 14 ] && echo "--with-lz4") \
      --with-openssl \
      --with-pgport=5432 \
      $([ $major_version -ge 15 ] && echo "--with-python") \
      --with-readline \
      --with-system-tzdata=/usr/share/zoneinfo \
      --with-uuid=ossp \
      $([ $major_version -ge 16 ] && echo "--with-zstd") && \
    make $([ $major_version -ge 15 ] && echo "world-bin") && \
    make $([ $major_version -ge 15 ] && echo "install-world-bin" || echo "install") && \
    make -C contrib install

# Update binary rpath to use a relative path.
# LD_FLAGS=-Wl,-rpath,'$ORIGIN/../lib' should be used instead, but does not appear to work.
RUN cd /opt/postgresql/bin && \
    rpath=$(patchelf --print-rpath postgres | sed 's|/opt/postgresql/lib|$ORIGIN/../lib|g') && \
    find ./ -type f -print0 | while IFS= read -r -d '' file; do patchelf --set-rpath $rpath $file; done

RUN cp /usr/src/postgresql/COPYRIGHT /opt/postgresql

# Create user and group for running tests
RUN addgroup -S -g 1000 postgresql && \
    adduser -D -S -G postgresql -u 1000 -s /bin/ash postgresql && \
    mkdir -p /opt/test && \
    chown postgresql:postgresql /opt/test

USER postgresql
